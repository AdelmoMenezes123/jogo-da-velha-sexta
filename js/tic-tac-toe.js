// TIC TAC TOE

x4 = document.querySelector('.x4')
x5 = document.querySelector('.x5')
x6 = document.querySelector('.x6')

p1 = document.getElementById('player-1')
p2 = document.getElementById('player-2')

const tic_tac_toe = {
    // ATTRIBUTES
    boardx4: [
        '', '', '', '',
        '', '', '', '',
        '', '', '', '',
        '', '', '', ''
    ],

    boardx5: [
        '', '', '', '', '',
        '', '', '', '', '',
        '', '', '', '', '',
        '', '', '', '', '',
        '', '', '', '', ''
    ],

    boardx6: [
        '', '', '', '', '', '',
        '', '', '', '', '', '',
        '', '', '', '', '', '',
        '', '', '', '', '', '',
        '', '', '', '', '', '',
        '', '', '', '', '', ''
    ],


    symbols: {
        options: ['O', 'X'],
        turn_index: 0,
        change() {
            this.turn_index = (this.turn_index === 0 ? 1 : 0);
        }
    },
    player1: 'player 1',
    player2: 'Player 2',

    // winn:{
    //     qtd:0,
    //     type=null,
    // },

    container_element: null,
    gameover: false,
    winning_sequences: [
        [0, 1, 2, 3, 6, 9], // 0 1 2 
        [0, 1, 2, 3, 7, 11],//0 1 2       
        [0, 1, 2, 4, 5, 6], // 0 1 2
        [0, 1, 2, 4, 8, 12], // 0 1 2 
        [0, 1, 2, 4, 9, 14], // 0 1 2 
        [0, 1, 2, 5, 6, 7], // 0 1 2 
        [0, 1, 2, 5, 9, 13], // 0 1 2 
        [0, 1, 2, 5, 10, 15], // 0 1 2 
        [0, 1, 2, 6, 9, 12], // 0 1 2 
        [0, 1, 2, 6, 10, 14], // 0 1 2 
        [0, 1, 2, 7, 10, 13], // 0 1 2 
        [0, 1, 2, 7, 11, 15], // 0 1 2 
        [0, 1, 2, 8, 9, 10], // 0 1 2 
        [0, 1, 2, 9, 10, 11], // 0 1 2 
        [0, 1, 2, 12, 13, 14], // 0 1 2 
        [0, 1, 2, 13, 14, 15], // 0 1 2 

        [0, 4, 8, 1, 2, 3], //  0 4 8
        [0, 4, 8, 1, 5, 9], //  0 4 8
        [0, 4, 8, 1, 6, 11], //  0 4 8
        [0, 4, 8, 2, 6, 10], //  0 4 8
        [0, 4, 8, 3, 6, 9], //  0 4 8
        [0, 4, 8, 3, 7, 11],// 0 4 8
        [0, 4, 8, 5, 6, 7], //  0 4 8
        [0, 4, 8, 5, 9, 13], //  0 4 8
        [0, 4, 8, 5, 10, 15], //  0 4 8
        [0, 4, 8, 6, 9, 12], //  0 4 8
        [0, 4, 8, 6, 10, 14], //  0 4 8
        [0, 4, 8, 7, 10, 13], //  0 4 8
        [0, 4, 8, 7, 11, 15], //  0 4 8
        [0, 4, 8, 9, 10, 11], //  0 4 8
        [0, 4, 8, 12, 13, 14], //  0 4 8
        [0, 4, 8, 13, 14, 15], //  0 4 8

        [0, 5, 10, 1, 2, 3],// 0 5 10
        [0, 5, 10, 1, 6, 11],// 0 5 10
        [0, 5, 10, 3, 6, 9],// 0 5 10
        [0, 5, 10, 3, 7, 11],// 0 5 10
        [0, 5, 10, 4, 8, 12],// 0 5 10
        [0, 5, 10, 4, 9, 14],// 0 5 10
        [0, 5, 10, 6, 9, 12],// 0 5 10
        [0, 5, 10, 12, 13, 14],// 0 5 10
        [0, 5, 10, 13, 14, 15],// 0 5 10

        [1, 2, 3, 0, 4, 8],//1 2 3
        [1, 2, 3, 0, 5, 10],//1 2 3
        [1, 2, 3, 4, 5, 6],//1 2 3
        [1, 2, 3, 4, 8, 12],//1 2 3
        [1, 2, 3, 4, 9, 14],//1 2 3
        [1, 2, 3, 5, 6, 7],//1 2 3
        [1, 2, 3, 5, 9, 13],//1 2 3
        [1, 2, 3, 5, 10, 15],//1 2 3
        [1, 2, 3, 6, 10, 14],//1 2 3
        [1, 2, 3, 6, 9, 12],//1 2 3
        [1, 2, 3, 7, 10, 13],//1 2 3
        [1, 2, 3, 7, 11, 15],//1 2 3
        [1, 2, 3, 8, 9, 10],//1 2 3
        [1, 2, 3, 9, 10, 11],//1 2 3
        [1, 2, 3, 12, 13, 14],//1 2 3
        [1, 2, 3, 13, 14, 15],//1 2 3

        [1, 5, 9, 0, 4, 8],//1 5 9
        [1, 5, 9, 2, 6, 10],//1 5 9
        [1, 5, 9, 3, 7, 11],//1 5 9
        [1, 5, 9, 4, 8, 12],//1 5 9
        [1, 5, 9, 6, 10, 14],//1 5 9
        [1, 5, 9, 7, 11, 15],//1 5 9
        [1, 5, 9, 7, 10, 13],//1 5 9
        [1, 5, 9, 12, 13, 14],//1 5 9
        [1, 5, 9, 13, 14, 15],//1 5 9

        [1, 6, 11, 0, 4, 8],// 1 6 11
        [1, 6, 11, 0, 5, 10],// 1 6 11
        [1, 6, 11, 2, 5, 8],// 1 6 11
        [1, 6, 11, 4, 8, 12],// 1 6 11
        [1, 6, 11, 4, 9, 14],// 1 6 11
        [1, 6, 11, 5, 9, 13],// 1 6 11
        [1, 6, 11, 5, 10, 15],// 1 6 11
        [1, 6, 11, 7, 10, 13],// 1 6 11
        [1, 6, 11, 8, 9, 10],// 1 6 11
        [1, 6, 11, 12, 13, 14],// 1 6 11
        [1, 6, 11, 13, 14, 15],// 1 6 11

        [2, 5, 8, 1, 6, 11],//2 5 8
        [2, 5, 8, 3, 6, 9],//2 5 8
        [2, 5, 8, 4, 9, 14],//2 5 8
        [2, 5, 8, 6, 9, 12],//2 5 8
        [2, 5, 8, 6, 10, 14],//2 5 8
        [2, 5, 8, 7, 10, 13],//2 5 8
        [2, 5, 8, 7, 11, 15],//2 5 8
        [2, 5, 8, 9, 10, 11],//2 5 8
        [2, 5, 8, 12, 13, 14],//2 5 8
        [2, 5, 8, 13, 14, 15],//2 5 8

        [2, 6, 10, 0, 4, 8],// 2 6 10
        [2, 6, 10, 1, 6, 9],// 2 6 10
        [2, 6, 10, 3, 7, 11],// 2 6 10
        [2, 6, 10, 4, 8, 12],// 2 6 10
        [2, 6, 10, 4, 9, 14],// 2 6 10
        [2, 6, 10, 5, 9, 13],// 2 6 10
        [2, 6, 10, 7, 11, 15],// 2 6 10
        [2, 6, 10, 12, 13, 14],// 2 6 10
        [2, 6, 10, 13, 14, 15],// 2 6 10

        [3, 6, 9, 0, 1, 2],// 3 6 9
        [3, 6, 9, 0, 4, 8],// 3 6 9
        [3, 6, 9, 0, 5, 10],// 3 6 9
        [3, 6, 9, 2, 5, 8],// 3 6 9
        [3, 6, 9, 4, 8, 12],// 3 6 9
        [3, 6, 9, 5, 10, 15],// 3 6 9
        [3, 6, 9, 7, 10, 13],// 3 6 9
        [3, 6, 9, 7, 11, 15],// 3 6 9
        [3, 6, 9, 12, 13, 14],// 3 6 9
        [3, 6, 9, 13, 14, 15],// 3 6 9


        [3, 7, 11, 0, 1, 2],// 3 7 11
        [3, 7, 11, 0, 4, 8],// 3 7 11
        [3, 7, 11, 0, 5, 10],// 3 7 11
        [3, 7, 11, 1, 5, 9],// 3 7 11
        [3, 7, 11, 2, 5, 8],// 3 7 11
        [3, 7, 11, 2, 6, 10],// 3 7 11
        [3, 7, 11, 4, 5, 6],// 3 7 11
        [3, 7, 11, 4, 8, 12],// 3 7 11
        [3, 7, 11, 4, 9, 14],// 3 7 11
        [3, 7, 11, 5, 9, 13],// 3 7 11
        [3, 7, 11, 6, 10, 14],// 3 7 11
        [3, 7, 11, 6, 9, 12],// 3 7 11
        [3, 7, 11, 12, 13, 14],// 3 7 11
        [3, 7, 11, 13, 14, 15],// 3 7 11

        [4, 5, 6, 0, 1, 2],// 4 5 6
        [4, 5, 6, 1, 2, 3],// 4 5 6
        [4, 5, 6, 3, 7, 11],// 4 5 6
        [4, 5, 6, 7, 11, 15],// 4 5 6
        [4, 5, 6, 7, 10, 13],// 4 5 6
        [4, 5, 6, 8, 9, 10],// 4 5 6
        [4, 5, 6, 9, 10, 11],// 4 5 6
        [4, 5, 6, 12, 13, 14],// 4 5 6
        [4, 5, 6, 13, 14, 15],// 4 5 6

        [4, 8, 12, 0, 1, 2],// 4 8 12
        [4, 8, 12, 0, 5, 10],// 4 8 12
        [4, 8, 12, 1, 2, 3],// 4 8 12
        [4, 8, 12, 1, 6, 11],// 4 8 12
        [4, 8, 12, 1, 5, 9],// 4 8 12
        [4, 8, 12, 2, 6, 10],// 4 8 12
        [4, 8, 12, 3, 6, 9],// 4 8 12
        [4, 8, 12, 3, 7, 11],// 4 8 12
        [4, 8, 12, 5, 6, 7],// 4 8 12
        [4, 8, 12, 5, 9, 13],// 4 8 12
        [4, 8, 12, 5, 10, 15],// 4 8 12
        [4, 8, 12, 6, 10, 14],// 4 8 12
        [4, 8, 12, 6, 9, 12],// 4 8 12
        [4, 8, 12, 7, 10, 13],// 4 8 12
        [4, 8, 12, 7, 11, 15],// 4 8 12
        [4, 8, 12, 9, 10, 11],// 4 8 12
        [4, 8, 12, 13, 14, 15],// 4 8 12

        [4, 9, 14, 0, 1, 2],// 14 9 4
        [4, 9, 14, 0, 5, 10],// 14 9 4
        [4, 9, 14, 1, 2, 3],// 14 9 4
        [4, 9, 14, 1, 6, 11],// 14 9 4
        [4, 9, 14, 2, 5, 8],// 14 9 4
        [4, 9, 14, 2, 6, 10],// 14 9 4
        [4, 9, 14, 5, 6, 7],// 14 9 4
        [4, 9, 14, 5, 10, 15],// 14 9 4
        [4, 9, 14, 7, 11, 15],// 14 9 4
        [4, 9, 14, 7, 10, 13],// 14 9 4

        [5, 6, 7, 0, 1, 2],// 5 6 7
        [5, 6, 7, 0, 4, 8],// 5 6 7
        [5, 6, 7, 1, 2, 3],// 5 6 7
        [5, 6, 7, 4, 9, 14],// 5 6 7
        [5, 6, 7, 4, 8, 12],// 5 6 7
        [5, 6, 7, 8, 9, 10],// 5 6 7
        [5, 6, 7, 9, 10, 11],// 5 6 7
        [5, 6, 7, 12, 13, 14],// 5 6 7
        [5, 6, 7, 13, 14, 15],// 5 6 7

        [5, 9, 13, 0, 1, 2],// 5 9 13
        [5, 9, 13, 0, 4, 8],// 5 9 13
        [5, 9, 13, 1, 2, 3],// 5 9 13
        [5, 9, 13, 1, 6, 11],// 5 9 13
        [5, 9, 13, 2, 6, 10],// 5 9 13
        [5, 9, 13, 3, 7, 11],// 5 9 13
        [5, 9, 13, 4, 8, 12],// 5 9 13
        [5, 9, 13, 6, 10, 14],// 5 9 13
        [5, 9, 13, 7, 11, 15],// 5 9 13        

        [5, 10, 15, 0, 1, 2],// 5 10 15
        [5, 10, 15, 1, 2, 3],// 5 10 15
        [5, 10, 15, 0, 4, 8],// 5 10 15
        [5, 10, 15, 4, 8, 12],// 5 10 15
        [5, 10, 15, 4, 9, 14],// 5 10 15
        [5, 10, 15, 6, 9, 12],// 5 10 15
        [5, 10, 15, 12, 13, 14],// 5 10 15

        [6, 9, 12, 0, 1, 2],// 6 9 12
        [6, 9, 12, 0, 4, 8],// 6 9 12
        [6, 9, 12, 0, 5, 10],// 6 9 12
        [6, 9, 12, 1, 2, 3],// 6 9 12
        [6, 9, 12, 2, 5, 8],// 6 9 12
        [6, 9, 12, 4, 8, 12],// 6 9 12
        [6, 9, 12, 5, 10, 15],// 6 9 12
        [6, 9, 12, 7, 10, 13],// 6 9 12
        [6, 9, 12, 7, 11, 15],// 6 9 12
        [6, 9, 12, 12, 13, 14],// 6 9 12
        [6, 9, 12, 13, 14, 15],// 6 9 12

        [6, 10, 14, 0, 1, 2],// 6 10 14
        [6, 10, 14, 0, 4, 8],// 6 10 14
        [6, 10, 14, 1, 2, 3],// 6 10 14
        [6, 10, 14, 1, 5, 9],// 6 10 14
        [6, 10, 14, 2, 5, 8],// 6 10 14
        [6, 10, 14, 3, 7, 11],// 6 10 14
        [6, 10, 14, 4, 8, 12],// 6 10 14
        [6, 10, 14, 5, 9, 13],// 6 10 14
        [6, 10, 14, 7, 11, 15],// 6 10 14

        [7, 10, 13, 0, 1, 2],// 7 10 13
        [7, 10, 13, 0, 4, 8],// 7 10 13
        [7, 10, 13, 1, 2, 3],// 7 10 13
        [7, 10, 13, 1, 5, 9],// 7 10 13
        [7, 10, 13, 1, 6, 11],// 7 10 13
        [7, 10, 13, 2, 5, 8],// 7 10 13
        [7, 10, 13, 3, 6, 9],// 7 10 13
        [7, 10, 13, 4, 8, 12],// 7 10 13
        [7, 10, 13, 4, 5, 6],// 7 10 13
        [7, 10, 13, 4, 9, 14],// 7 10 13
        [7, 10, 13, 6, 9, 12],// 7 10 13

        [7, 11, 15, 0, 1, 2],// 7 11 15
        [7, 11, 15, 0, 4, 8],// 7 11 15
        [7, 11, 15, 0, 5, 10],// 7 11 15
        [7, 11, 15, 1, 2, 3],// 7 11 15
        [7, 11, 15, 1, 5, 9],// 7 11 15
        [7, 11, 15, 2, 5, 8],// 7 11 15
        [7, 11, 15, 2, 6, 10],// 7 11 15
        [7, 11, 15, 3, 6, 9],// 7 11 15
        [7, 11, 15, 4, 8, 12],// 7 11 15
        [7, 11, 15, 4, 5, 6],// 7 11 15
        [7, 11, 15, 5, 9, 13],// 7 11 15
        [7, 11, 15, 6, 9, 12],// 7 11 15
        [7, 11, 15, 6, 10, 14],// 7 11 15
        [7, 11, 15, 8, 9, 10],// 7 11 15
        [7, 11, 15, 12, 13, 14],// 7 11 15

        [8, 9, 10, 0, 1, 2],// 8 9 10
        [8, 9, 10, 1, 2, 3],// 8 9 10
        [8, 9, 10, 1, 6, 11],// 8 9 10
        [8, 9, 10, 3, 7, 11],// 8 9 10
        [8, 9, 10, 4, 5, 6],// 8 9 10
        [8, 9, 10, 4, 9, 14],// 8 9 10
        [8, 9, 10, 5, 6, 7],// 8 9 10
        [8, 9, 10, 7, 11, 15],// 8 9 10
        [8, 9, 10, 12, 13, 14],// 8 9 10
        [8, 9, 10, 13, 14, 15],// 8 9 10

        [9, 10, 11, 0, 1, 2],// 9 10 11
        [9, 10, 11, 0, 4, 8],// 9 10 11
        [9, 10, 11, 1, 2, 3],// 9 10 11
        [9, 10, 11, 2, 5, 8],// 9 10 11
        [9, 10, 11, 4, 8, 12],// 9 10 11
        [9, 10, 11, 4, 5, 6],// 9 10 11
        [9, 10, 11, 5, 6, 7],// 9 10 11
        [9, 10, 11, 12, 13, 14],// 9 10 11
        [9, 10, 11, 13, 14, 15],// 9 10 11

        [12, 13, 14, 0, 1, 2], // 12 13 14
        [12, 13, 14, 0, 4, 8], // 12 13 14
        [12, 13, 14, 0, 5, 10], // 12 13 14
        [12, 13, 14, 1, 2, 3], // 12 13 14
        [12, 13, 14, 1, 6, 11], // 12 13 14
        [12, 13, 14, 1, 5, 9], // 12 13 14
        [12, 13, 14, 2, 5, 8], // 12 13 14
        [12, 13, 14, 2, 6, 10], // 12 13 14
        [12, 13, 14, 3, 6, 9], // 12 13 14
        [12, 13, 14, 3, 7, 11], // 12 13 14
        [12, 13, 14, 4, 5, 6], //12 13 14
        [12, 13, 14, 5, 6, 7], // 12 13 14
        [12, 13, 14, 5, 10, 15], // 12 13 14
        [12, 13, 14, 7, 11, 15], // 12 13 14
        [12, 13, 14, 8, 9, 10], // 12 13 14
        [12, 13, 14, 9, 10, 11], // 12 13 14

        [13, 14, 15, 0, 1, 2], // 13 14 15
        [13, 14, 15, 0, 4, 8], // 13 14 15
        [13, 14, 15, 0, 5, 10], // 13 14 15
        [13, 14, 15, 1, 2, 3], // 13 14 15
        [13, 14, 15, 1, 6, 11], // 13 14 15
        [13, 14, 15, 1, 5, 9], // 13 14 15
        [13, 14, 15, 2, 5, 8], // 13 14 15
        [13, 14, 15, 2, 6, 10], // 13 14 15
        [13, 14, 15, 3, 6, 9], // 13 14 15
        [13, 14, 15, 3, 7, 11], // 13 14 15
        [13, 14, 15, 4, 5, 6], //13 14 15
        [13, 14, 15, 4, 8, 12], // 13 14 15
        [13, 14, 15, 5, 6, 7], // 13 14 15
        [13, 14, 15, 8, 9, 10], // 13 14 15
        [13, 14, 15, 9, 10, 11], // 13 14 15

    ],

    // FUNCTIONS
    init(container) {
        this.container_element = container;
    },

    make_play(position) {
        if ((!!x4) && (this.gameover || this.boardx4[position] !== '')) return false;

        else if ((!!x5) && (this.gameover || this.boardx5[position] !== '')) return false;
        else if ((!!x6) && (this.gameover || this.boardx6[position] !== '')) return false;

        const currentSymbol = this.symbols.options[this.symbols.turn_index];
        if (!!x4) this.boardx4[position] = currentSymbol;
        else if (!!x5) this.boardx5[position] = currentSymbol;
        else if (!!x6) this.boardx6[position] = currentSymbol;

        this.draw();

        const winning_sequences_index = this.check_winning_sequences(currentSymbol);

        if (this.is_game_over()) {
            this.game_is_over();
            let velha = 1
            p1.innerHTML = `Deu Velha ${velha++}`
            p2.innerHTML = `Deu Velha ${velha++}`
            velha++
        }

        if (winning_sequences_index >= 0) {

            this.game_is_over();

            this.stylize_winner_sequence(this.winning_sequences[winning_sequences_index]);
        } else {
            this.symbols.change();
        }
        return true;
    },

    stylize_winner_sequence(winner_sequence) {
        winner_sequence.forEach((position) => {
            this
                .container_element
                .querySelector(`div:nth-child(${position + 1})`)
                .classList.add('winner');
        });
    },

    check_winning_sequences(symbol) {
        for (i in this.winning_sequences) {
            if (!!x4) {
                if (
                    this.boardx4[this.winning_sequences[i][0]] == symbol &&
                    this.boardx4[this.winning_sequences[i][1]] == symbol &&
                    this.boardx4[this.winning_sequences[i][2]] == symbol &&
                    this.boardx4[this.winning_sequences[i][3]] == symbol &&
                    this.boardx4[this.winning_sequences[i][4]] == symbol &&
                    this.boardx4[this.winning_sequences[i][5]] == symbol
                ) {
                    let velha = 0 ;
                    if (symbol == 'O') {
                        p1.innerHTML = `winning ${velha+=1}`
                    }
                    else if (symbol == 'X') {
                        p2.innerHTML = `winning ${velha+=1}`
                    }
                    velha ++;
                    return i;
                }
            }
        };
        return -1;
    },

    game_is_over() {
        this.gameover = true;
        // alert(`GAME OVER - Jogador: ${this.symbol}`);
    },

    is_game_over() {
        if (!!x4) return !this.boardx4.includes('');
    },

    start() {
        if (!!x4) this.boardx4.fill('');
        this.draw();
        this.gameover = false;
    },

    restart() {
        if (this.is_game_over() || this.gameover) {
            this.start();
            alert('this game has been restarted!')
        } else if (confirm('Are you sure you want to restart this game?')) {
            this.start();
            alert('this game has been restarted!')
        }
    },

    draw() {
        if (!!x4) this.container_element.innerHTML = this.boardx4.map((element, index) => `<div onclick="tic_tac_toe.make_play('${index}')"> ${element} </div>`).reduce((content, current) => content + current);
    },
};